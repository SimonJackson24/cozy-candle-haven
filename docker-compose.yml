version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - VITE_VENDURE_API_URL=http://localhost:3000/shop-api
    depends_on:
      - vendure
    restart: unless-stopped
    networks:
      - app-network

  vendure:
    image: node:18
    working_dir: /usr/src/app
    command: >
      bash -c "npm init -y &&
              npm install @vendure/core@latest @vendure/admin-ui-plugin@latest @vendure/asset-server-plugin@latest typescript ts-node &&
              mkdir -p src/static/assets &&
              echo '{\"type\":\"module\",\"dependencies\":{\"@vendure/core\":\"latest\",\"@vendure/admin-ui-plugin\":\"latest\",\"@vendure/asset-server-plugin\":\"latest\"},\"scripts\":{\"dev\":\"ts-node src/index.ts\",\"start\":\"node dist/index.js\",\"build\":\"tsc\"},\"devDependencies\":{\"typescript\":\"^5.0.0\",\"ts-node\":\"^10.9.0\"}}' > package.json &&
              echo 'import { bootstrap, DefaultJobQueuePlugin, DefaultSearchPlugin } from \"@vendure/core\"; import { AdminUiPlugin } from \"@vendure/admin-ui-plugin\"; import { AssetServerPlugin } from \"@vendure/asset-server-plugin\"; import { config } from \"./vendure-config\"; bootstrap({ ...config, plugins: [ DefaultJobQueuePlugin, DefaultSearchPlugin, AssetServerPlugin.init({ route: \"assets\", assetUploadDir: \"./static/assets\" }), AdminUiPlugin.init({ route: \"admin\", port: 3000 }) ] }).catch(err => { console.error(err); process.exit(1); });' > src/index.ts &&
              echo 'import { VendureConfig } from \"@vendure/core\"; import { defaultConfig } from \"@vendure/core\"; export const config: VendureConfig = { ...defaultConfig, apiOptions: { port: 3000, adminApiPath: \"admin-api\", shopApiPath: \"shop-api\", }, authOptions: { tokenMethod: [\"bearer\"], superadminCredentials: { identifier: process.env.SUPERADMIN_USERNAME || \"superadmin\", password: process.env.SUPERADMIN_PASSWORD || \"superadmin123\" } }, dbConnectionOptions: { type: \"postgres\", host: process.env.DB_HOST || \"postgres\", port: Number(process.env.DB_PORT) || 5432, username: process.env.DB_USERNAME || \"vendure\", password: process.env.DB_PASSWORD || \"vendure123\", database: process.env.DB_NAME || \"vendure\", synchronize: true } };' > src/vendure-config.ts &&
              echo '{\"compilerOptions\":{\"target\":\"es2019\",\"module\":\"commonjs\",\"outDir\":\"./dist\",\"rootDir\":\"./src\",\"strict\":true,\"esModuleInterop\":true,\"skipLibCheck\":true,\"forceConsistentCasingInFileNames\":true}}' > tsconfig.json &&
              npm run dev"
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=vendure
      - DB_USERNAME=vendure
      - DB_PASSWORD=vendure123
      - SUPERADMIN_USERNAME=superadmin
      - SUPERADMIN_PASSWORD=superadmin123
      - COOKIE_SECRET=your-cookie-secret
      - JWT_SECRET=your-jwt-secret
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=vendure
      - POSTGRES_USER=vendure
      - POSTGRES_PASSWORD=vendure123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge